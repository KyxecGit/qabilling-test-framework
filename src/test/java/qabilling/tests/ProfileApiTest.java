package qabilling.tests;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.DisplayName;
import qabilling.core.ApiConfig;
import qabilling.core.BaseApiTest;
import qabilling.core.dto.ProfileDto;
import qabilling.testdata.TestDataGenerator;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.notNullValue;
import static org.hamcrest.Matchers.isA;
import static org.hamcrest.Matchers.greaterThan;

/**
 * üë§ –¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π –∞–±–æ–Ω–µ–Ω—Ç–æ–≤
 * 
 * –ß—Ç–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º:
 * - –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ‚úÖ
 * - –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ‚úÖ  
 * - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ‚úÖ
 * - –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ‚úÖ
 * - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ üîê
 * 2. Test Data Generator - —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 * 3. Builder –ø–∞—Ç—Ç–µ—Ä–Ω - –≥–∏–±–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
 * 4. –ü–æ–Ω—è—Ç–Ω—ã–µ –∏–º–µ–Ω–∞ –º–µ—Ç–æ–¥–æ–≤ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
 * 5. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
 * 
 * –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞:
 * - –ù–µ—Ç hardcoded JSON —Å—Ç—Ä–æ–∫
 * - –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ IDE
 * - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
 * - –õ–µ–≥—á–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å
 * - –ú–µ–Ω–µ–µ –ø–æ–¥–≤–µ—Ä–∂–µ–Ω –æ—à–∏–±–∫–∞–º
 */
@DisplayName("Profile API Tests - –¢–µ—Å—Ç—ã API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –∞–±–æ–Ω–µ–Ω—Ç–æ–≤")
public class ProfileApiTest extends BaseApiTest {

    // =============================================
    // –ü–û–ó–ò–¢–ò–í–ù–´–ï –¢–ï–°–¢–´ (Happy Path)
    // =============================================

    @Test
    @DisplayName("–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    void shouldCreateProfileWithValidData() {
        // –°–æ–∑–¥–∞–µ–º –≤–∞–ª–∏–¥–Ω—ã–π DTO —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
        ProfileDto profile = TestDataGenerator.Profile.valid();
        
        System.out.println("–°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å: " + profile.toString());
        
        given()
            .header("Authorization", getAuthHeader())
            .contentType(ApiConfig.CONTENT_TYPE)
            .body(profile.toJson()) // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ DTO –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è JSON
        .when()
            .post(ApiConfig.BASE_URL + "/api/admin/profile/create")
        .then()
            .statusCode(200) // –°–æ–≥–ª–∞—Å–Ω–æ Swagger –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–≥–æ 200
            .body("content.msisdn", equalTo(profile.getMsisdn()))
            .body("content.id", notNullValue())
            .body("content.user.id", equalTo(profile.getUserId()))
            .body("content.pricePlan.id", equalTo(profile.getPricePlanId()));
    }

    @Test
    @DisplayName("–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏")
    void shouldCreateProfileWithSpecificParams() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ MSISDN
        ProfileDto profile = ProfileDto.builder()
            .msisdn(TestDataGenerator.Msisdn.valid()) // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π MSISDN
            .userId(1)             // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            .pricePlanId(3)        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω
            .build();
        
        System.out.println("–°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: " + profile);
        
        given()
            .header("Authorization", getAuthHeader())
            .contentType(ApiConfig.CONTENT_TYPE)
            .body(profile.toJson())
        .when()
            .post(ApiConfig.BASE_URL + "/api/admin/profile/create")
        .then()
            .statusCode(200); // –°–æ–≥–ª–∞—Å–Ω–æ Swagger –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–≥–æ 200
    }

    @Test
    @DisplayName("–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ ID")
    void shouldGetProfileById() {
        int existingProfileId = 1; // –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
        
        given()
            .header("Authorization", getAuthHeader())
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/profile/" + existingProfileId)
        .then()
            .statusCode(200)
            .body("code", equalTo("OK"))
            .body("content.id", equalTo(existingProfileId)) // API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç
            .body("content.msisdn", notNullValue())
            .body("content.user", notNullValue())
            .body("content.pricePlan", notNullValue());
    }

    @Test
    @DisplayName("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π")
    void shouldGetAllProfiles() {
        given()
            .header("Authorization", getAuthHeader())
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/profile/all")
        .then()
            .statusCode(200)
            .body("code", equalTo("OK"))
            .body("content", isA(java.util.List.class))
            .body("content.size()", greaterThan(0)); // API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç
    }

    // =============================================
    // –ù–ï–ì–ê–¢–ò–í–ù–´–ï –¢–ï–°–¢–´ (Error Cases)
    // =============================================

    @Test
    @DisplayName("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º MSISDN - —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π")
    void shouldFailToCreateProfileWithTooShortMsisdn() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ MSISDN
        ProfileDto invalidProfile = TestDataGenerator.Profile.withInvalidMsisdn(
            TestDataGenerator.MsisdnInvalidType.TOO_SHORT
        );
        
        System.out.println("–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å: " + invalidProfile);
        
        given()
            .header("Authorization", getAuthHeader())
            .contentType(ApiConfig.CONTENT_TYPE)
            .body(invalidProfile.toJson())
        .when()
            .post(ApiConfig.BASE_URL + "/api/admin/profile/create")
        .then()
            .statusCode(400); // Bad Request - —É–±–∏—Ä–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
    }

    @Test
    @DisplayName("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º MSISDN")
    void shouldFailToCreateProfileWithWrongPrefix() {
        ProfileDto invalidProfile = TestDataGenerator.Profile.withInvalidMsisdn(
            TestDataGenerator.MsisdnInvalidType.WRONG_PREFIX
        );
        
        given()
            .header("Authorization", getAuthHeader())
            .contentType(ApiConfig.CONTENT_TYPE)
            .body(invalidProfile.toJson())
        .when()
            .post(ApiConfig.BASE_URL + "/api/admin/profile/create")
        .then()
            .statusCode(400);
    }

    @Test
    @DisplayName("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è —Å MSISDN —Å–æ–¥–µ—Ä–∂–∞—â–∏–º –±—É–∫–≤—ã")
    void shouldFailToCreateProfileWithLettersInMsisdn() {
        ProfileDto invalidProfile = TestDataGenerator.Profile.withInvalidMsisdn(
            TestDataGenerator.MsisdnInvalidType.CONTAINS_LETTERS
        );
        
        given()
            .header("Authorization", getAuthHeader())
            .contentType(ApiConfig.CONTENT_TYPE)
            .body(invalidProfile.toJson())
        .when()
            .post(ApiConfig.BASE_URL + "/api/admin/profile/create")
        .then()
            .statusCode(400);
    }

    @Test
    @DisplayName("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º ID")
    void shouldFailToGetProfileWithNonExistentId() {
        int nonExistentId = TestDataGenerator.Id.nonExistent();
        
        System.out.println("–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π ID: " + nonExistentId);
        
        given()
            .header("Authorization", getAuthHeader())
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/profile/" + nonExistentId)
        .then()
            .statusCode(404); // Not Found
    }

    @Test
    @DisplayName("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º ID")
    void shouldFailToGetProfileWithNegativeId() {
        int negativeId = TestDataGenerator.Id.negative();
        
        given()
            .header("Authorization", getAuthHeader())
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/profile/" + negativeId)
        .then()
            .statusCode(404); // –°–æ–≥–ª–∞—Å–Ω–æ HTTP —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º - Not Found –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö ID
    }

    // =============================================
    // –¢–ï–°–¢–´ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
    // =============================================

    @Test
    @DisplayName("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    void shouldFailToCreateProfileWithoutAuth() {
        ProfileDto profile = TestDataGenerator.Profile.valid();
        
        given()
            .contentType(ApiConfig.CONTENT_TYPE)
            .body(profile.toJson())
        .when()
            .post(ApiConfig.BASE_URL + "/api/admin/profile/create")
        .then()
            .statusCode(401); // –°–æ–≥–ª–∞—Å–Ω–æ HTTP - 401 Unauthorized –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    }

    @Test
    @DisplayName("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    void shouldFailToGetProfileWithoutAuth() {
        given()
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/profile/1")
        .then()
            .statusCode(401); // –°–æ–≥–ª–∞—Å–Ω–æ HTTP - 401 Unauthorized –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    }

    // =============================================
    // –ù–ï–î–û–°–¢–ê–Æ–©–ò–ï –¢–ï–°–¢–´ –ò–ó SWAGGER
    // =============================================

    @Test
    @DisplayName("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    void shouldUpdateProfile() {
        int existingProfileId = 1;
        ProfileDto updateData = ProfileDto.builder()
            .msisdn("996800987654") // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç MSISDN —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º 996
            .userId(1)
            .pricePlanId(3)
            .build();

        given()
            .header("Authorization", getAuthHeader())
            .contentType(ApiConfig.CONTENT_TYPE)
            .body(updateData.toJson())
        .when()
            .put(ApiConfig.BASE_URL + "/api/admin/profile/update/" + existingProfileId)
        .then()
            .statusCode(200); // –°–æ–≥–ª–∞—Å–Ω–æ Swagger –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–≥–æ 200
    }

    @Test
    @DisplayName("–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ MSISDN")
    void shouldGetProfileByMsisdn() {
        String testMsisdn = "996800987654"; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π MSISDN –∏–∑ API (–ø—Ä–æ—Ñ–∏–ª—å —Å ID 1)

        given()
            .header("Authorization", getAuthHeader())
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/profile/getByMsisdn/" + testMsisdn)
        .then()
            .statusCode(200)
            .body("code", equalTo("OK"))
            .body("content.msisdn", equalTo(testMsisdn));
    }

    @Test
    @DisplayName("–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ ID")
    void shouldDeleteProfile() {
        // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        ProfileDto profile = TestDataGenerator.Profile.valid();
        
        int profileId = given()
            .header("Authorization", getAuthHeader())
            .contentType(ApiConfig.CONTENT_TYPE)
            .body(profile.toJson())
        .when()
            .post(ApiConfig.BASE_URL + "/api/admin/profile/create")
        .then()
            .statusCode(200) // –°–æ–≥–ª–∞—Å–Ω–æ Swagger –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–≥–æ 200
            .extract().path("content.id");

        // –£–¥–∞–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        given()
            .header("Authorization", getAuthHeader())
        .when()
            .delete(ApiConfig.BASE_URL + "/api/admin/profile/delete/" + profileId)
        .then()
            .statusCode(200); // –°–æ–≥–ª–∞—Å–Ω–æ Swagger –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–≥–æ 200

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        given()
            .header("Authorization", getAuthHeader())
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/profile/" + profileId)
        .then()
            .statusCode(404); // –£–¥–∞–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 404
    }
}