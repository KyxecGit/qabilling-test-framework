package qabilling.tests;

import org.junit.jupiter.api.Test;
import qabilling.core.ApiConfig;
import qabilling.core.BaseApiTest;

import static io.restassured.RestAssured.given;

/**
 * üîë –¢–µ—Å—Ç—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 * 
 * ‚ö†Ô∏è –í–ê–ñ–ù–û –î–õ–Ø –ù–û–í–ò–ß–ö–û–í:
 * 
 * –≠—Ç–∏ —Ç–µ—Å—Ç—ã –ú–û–ì–£–¢ –ü–ê–î–ê–¢–¨ –µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—à—å –∏—Ö –≤ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏.
 * –≠—Ç–æ –ù–ï –ë–ê–ì –≤ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–µ, –∞ –ë–ê–ì –≤ API (–ø–æ–¥—Ä–æ–±–Ω–æ —Å–º–æ—Ç—Ä–∏ API_PROBLEMS.md)
 * 
 * –ü—Ä–æ–±–ª–µ–º–∞: API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTTP 403 –≤–º–µ—Å—Ç–æ 401 –¥–ª—è –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
 * –≠—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç HTTP —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã (RFC 7235).
 */
public class AuthApiTest extends BaseApiTest {

    @Test
    void shouldGetValidToken() {
        String token = ApiConfig.getToken();
        assert token != null && !token.trim().isEmpty() : "–¢–æ–∫–µ–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É—Å—Ç—ã–º";
        
        given()
            .header("Authorization", getAuthHeader())
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/counter/all-active")
        .then()
            .statusCode(200);
    }

    @Test
    void shouldRejectInvalidToken() {
        given()
            .header("Authorization", "Bearer invalid.token.here")
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/counter/all-active")
        .then()
            .statusCode(401);
    }

    @Test
    void shouldRejestRequestWithoutToken() {
        given()
        .when()
            .get(ApiConfig.BASE_URL + "/api/admin/counter/all-active")
        .then()
            .statusCode(401);
    }
}
