package qabilling.testdata;

import qabilling.core.dto.ProfileDto;
import qabilling.core.dto.BalanceDto;
import qabilling.core.dto.CounterDto;
import java.util.concurrent.ThreadLocalRandom;

/**
 * üé≤ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è API —Ç–µ—Å—Ç–æ–≤
 * 
 * ‚úÖ FIX: –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è Counter —Å DTO
 */
public class TestDataGenerator {
    
    /**
     * Enum –¥–ª—è —Ç–∏–ø–æ–≤ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö MSISDN
     * Enum - —ç—Ç–æ —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ Java.
     * –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.
     */
    public enum MsisdnInvalidType {
        TOO_SHORT("–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π MSISDN"),
        TOO_LONG("–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π MSISDN"), 
        WRONG_PREFIX("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å"),
        CONTAINS_LETTERS("–°–æ–¥–µ—Ä–∂–∏—Ç –±—É–∫–≤—ã"),
        EMPTY("–ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞");
        
        private final String description;
        
        MsisdnInvalidType(String description) {
            this.description = description;
        }
        
        public String getDescription() { return description; }
    }
    
    /**
     * –í–ª–æ–∂–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ MSISDN
     * 
     * –í–ª–æ–∂–µ–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã –ø–æ–º–æ–≥–∞—é—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å —Å–≤—è–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
     * –∏ –¥–µ–ª–∞—é—Ç –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º: TestDataGenerator.Msisdn.valid()
     */
    public static class Msisdn {
        
        /**
         * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π MSISDN —Å–æ–≥–ª–∞—Å–Ω–æ Swagger pattern: ^99680\d{7}$
         * 
         * @return —Å—Ç—Ä–æ–∫–∞ –≤–∏–¥–∞ "99680xxxxxxx" –≥–¥–µ x - —Å–ª—É—á–∞–π–Ω–∞—è —Ü–∏—Ñ—Ä–∞ (12 —Ü–∏—Ñ—Ä –≤—Å–µ–≥–æ)
         * 
         * –ü—Ä–∏–º–µ—Ä—ã: "996801234567", "996809876543"
         */
        public static String valid() {
            // ThreadLocalRandom –ª—É—á—à–µ —á–µ–º Random –≤ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ–π —Å—Ä–µ–¥–µ
            int randomPart = ThreadLocalRandom.current().nextInt(1_000_000, 10_000_000);
            return "99680" + randomPart; // –≠—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: 99680 (5 —Ü–∏—Ñ—Ä) + 7 —Ü–∏—Ñ—Ä = 12 —Ü–∏—Ñ—Ä
        }
        
        /**
         * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π MSISDN —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
         * 
         * @param type —Ç–∏–ø –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ MSISDN
         * @return –Ω–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
         */
        public static String invalid(MsisdnInvalidType type) {
            return switch (type) {
                case TOO_SHORT -> "123"; // 3 —Ü–∏—Ñ—Ä—ã –≤–º–µ—Å—Ç–æ 12
                case TOO_LONG -> "996801234567890"; // 15 —Ü–∏—Ñ—Ä –≤–º–µ—Å—Ç–æ 12
                case WRONG_PREFIX -> {
                    int randomPart = ThreadLocalRandom.current().nextInt(1_000_000, 10_000_000);
                    yield "99681" + randomPart; // 99681 –≤–º–µ—Å—Ç–æ 99680
                }
                case CONTAINS_LETTERS -> "abcdefghijkl"; // 12 –±—É–∫–≤ –≤–º–µ—Å—Ç–æ —Ü–∏—Ñ—Ä
                case EMPTY -> ""; // –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
            };
        }
    }
    
    /**
     * –í–ª–æ–∂–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID'—à–Ω–∏–∫–æ–≤
     * 
     * ‚úÖ FIX: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ - —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ ID
     */
    public static class Id {
        
        /**
         * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID, –∫–æ—Ç–æ—Ä—ã–π –¢–û–ß–ù–û —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ
         * (–¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞)
         * 
         * @return ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ (–æ–±—ã—á–Ω–æ 1)
         */
        public static int valid() {
            return 1; // –ü—Ä–æ—Ñ–∏–ª—å —Å ID 1 –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        }
        
        /**
         * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–æ–ª—å—à–æ–π ID –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ
         * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è 404 –æ—à–∏–±–æ–∫
         * 
         * @return –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ (9-10 –º–∏–ª–ª–∏–æ–Ω–æ–≤)
         */
        public static int nonExistent() {
            return ThreadLocalRandom.current().nextInt(9_000_000, 10_000_001);
        }
        
        /**
         * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ID –¥–ª—è –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
         * 
         * @return –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
         */
        public static int negative() {
            return -ThreadLocalRandom.current().nextInt(1, 1001);
        }
    }
    
    /**
     * –í–ª–æ–∂–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ProfileDto –æ–±—ä–µ–∫—Ç–æ–≤
     */
    public static class Profile {
        
        /**
         * –°–æ–∑–¥–∞–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π ProfileDto —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
         * 
         * @return –≥–æ—Ç–æ–≤—ã–π –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é ProfileDto
         */
        public static ProfileDto valid() {
            return ProfileDto.builder()
                .msisdn(Msisdn.valid())
                .userId(1) // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π user ID –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Ç–µ—Å—Ç–æ–≤
                .pricePlanId(ThreadLocalRandom.current().nextInt(1, 6)) // Price plan –æ—Ç 1 –¥–æ 5
                .build();
        }
        
        /**
         * –°–æ–∑–¥–∞–µ—Ç ProfileDto —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
         * 
         * @param userId –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
         * @param pricePlanId –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π ID —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
         * @return ProfileDto —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
         */
        public static ProfileDto withParams(int userId, int pricePlanId) {
            return ProfileDto.builder()
                .msisdn(Msisdn.valid())
                .userId(userId)
                .pricePlanId(pricePlanId)
                .build();
        }
        
        /**
         * –°–æ–∑–¥–∞–µ—Ç ProfileDto —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º MSISDN
         * –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
         * 
         * @param invalidType —Ç–∏–ø –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ MSISDN
         * @return ProfileDto —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
         */
        public static ProfileDto withInvalidMsisdn(MsisdnInvalidType invalidType) {
            return ProfileDto.builder()
                .msisdn(Msisdn.invalid(invalidType))
                .userId(1)
                .pricePlanId(4)
                .build();
        }
    }
    
    /**
     * –í–ª–æ–∂–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ BalanceDto –æ–±—ä–µ–∫—Ç–æ–≤
     */
    public static class Balance {
        
        /**
         * –°–æ–∑–¥–∞–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π BalanceDto —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π —Å—É–º–º–æ–π
         * 
         * @return –≥–æ—Ç–æ–≤—ã–π –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é BalanceDto
         */
        public static BalanceDto valid() {
            return BalanceDto.createValidRandom();
        }
        
        /**
         * –°–æ–∑–¥–∞–µ—Ç BalanceDto —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—É–º–º–æ–π
         * 
         * @param amount –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Å—É–º–º–∞
         * @return BalanceDto —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Å—É–º–º–æ–π
         */
        public static BalanceDto withAmount(double amount) {
            return BalanceDto.builder()
                .amount(amount)
                .build();
        }
        
        /**
         * –°–æ–∑–¥–∞–µ—Ç BalanceDto —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Å—É–º–º–æ–π –¥–ª—è –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
         * 
         * @return BalanceDto —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
         */
        public static BalanceDto negative() {
            double negativeAmount = -ThreadLocalRandom.current().nextDouble(1.0, 1000.0);
            return BalanceDto.createInvalidWithNegativeAmount(negativeAmount);
        }
    }
    
    /**
     * ‚úÖ FIX: –ù–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ CounterDto –æ–±—ä–µ–∫—Ç–æ–≤
     * 
     * –í–ª–æ–∂–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—á—ë—Ç—á–∏–∫–∞–º–∏
     */
    public static class Counter {
        
        /**
         * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Å—á—ë—Ç—á–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –¢–û–ß–ù–û —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
         * 
         * @return ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å—á—ë—Ç—á–∏–∫–∞ (–æ–±—ã—á–Ω–æ 1)
         */
        public static int validId() {
            return 1; // –°—á—ë—Ç—á–∏–∫ —Å ID 1 –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        }
        
        /**
         * –°–æ–∑–¥–∞–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π CounterDto —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
         * 
         * @return –≥–æ—Ç–æ–≤—ã–π –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é CounterDto
         */
        public static CounterDto valid() {
            return CounterDto.builder()
                .id(1)
                .state(true)
                .megabyteCount(1000)
                .secondsCount(3600)
                .smsCount(100)
                .startDate("2025-10-01T00:00:00")
                .endDate("2025-10-31T23:59:59")
                .build();
        }
        
        /**
         * –°–æ–∑–¥–∞–µ—Ç CounterDto —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
         * 
         * @param id ID —Å—á—ë—Ç—á–∏–∫–∞
         * @param state –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Å—á—ë—Ç—á–∏–∫
         * @return CounterDto —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
         */
        public static CounterDto withParams(int id, boolean state) {
            return CounterDto.builder()
                .id(id)
                .state(state)
                .megabyteCount(1000)
                .secondsCount(3600)
                .smsCount(100)
                .startDate("2025-10-01T00:00:00")
                .endDate("2025-10-31T23:59:59")
                .build();
        }
        
        /**
         * –°–æ–∑–¥–∞–µ—Ç CounterDto —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Å—á—ë—Ç—á–∏–∫–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
         * 
         * @param megabyteCount MB –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ
         * @param secondsCount —Å–µ–∫—É–Ω–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ
         * @param smsCount SMS –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ
         * @return CounterDto —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
         */
        public static CounterDto withUsage(int megabyteCount, int secondsCount, int smsCount) {
            return CounterDto.builder()
                .id(1)
                .state(true)
                .megabyteCount(megabyteCount)
                .secondsCount(secondsCount)
                .smsCount(smsCount)
                .startDate("2025-10-01T00:00:00")
                .endDate("2025-10-31T23:59:59")
                .build();
        }
    }
}